input {
  file {
    path => "/path/to/your/csv/*.csv"
    start_position => "beginning"
	sincedb_path => "/dev/null"
  
}
stdin  { codec => line { charset => "ISO8859-1" }   }
}

filter {
      csv {
	 	separator => ","
		columns =>["serial","Country","TotalCases","NewCases","TotalDeaths","NewDeaths","TotalRecovered","NewRecovered","ActiveCase","SeriousCase","TotCases_1m","Deathcase_1m","Total_test","Total_test_1m","population","Continent","case_1","death_1","test_1","dates"]
		remove_field => ["message"]
		}
		mutate
			{
			convert => {	"TotalCases" => "integer" 
				    	"NewCases" => "integer"
					"TotalDeaths" => "integer"
					"NewDeaths" => "integer"
					"TotalRecovered" => "integer"
					"ActiveCase" => "integer"
					"SeriousCase" => "integer"
					"TotCases_1m" => "float"
					"Deathcase_1m" => "float"
					"Total_test"  => "integer"
					"Total_test_1m"  => "float"
					"NewRecovered" => "integer"
					"case_1"  => "integer"
					"death_1" => "integer"
					"test_1" => "integer"
					}
				


			}
		
		#Date filter is used to convert date to @Timestamp sho that chart in Kibana will show as per date

 date {
 	match => ["dates",  "yyyy-MM-dd"]
	target => "dates"
	}

#Remove first header line to insert in elasticsearch
    if  [Country] =~ "Country"
{
drop {}
}
      
    }
output {
  elasticsearch { 
  hosts => "http://X.X.X.X:9200/" 
  user => "user"
  password => "password"
  index => "covid19"
  }
 # stdout { codec => rubydebug }

   }
